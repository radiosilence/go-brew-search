version: '3'

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list-all

  build:
    desc: Build the brew-search binary
    cmds:
      - 'echo "üî® Building go-brew-search..."'
      - 'echo "üì¶ Downloading dependencies..."'
      - go mod download
      - 'echo "üèóÔ∏è  Compiling..."'
      - go build -o brew-search cmd/main.go
      - chmod +x brew-search
      - 'echo "‚úÖ Build complete! Binary created at ./brew-search"'
    sources:
      - cmd/**/*.go
      - internal/**/*.go
      - go.mod
    generates:
      - brew-search

  install:
    desc: Install brew-search to /usr/local/bin
    deps: [build]
    cmds:
      - 'echo "üì¶ Installing brew-search to /usr/local/bin..."'
      - sudo cp brew-search /usr/local/bin/
      - 'echo "‚úÖ Installation complete!"'

  install-local:
    desc: Install brew-search to ~/.local/bin
    deps: [build]
    cmds:
      - 'echo "üì¶ Installing brew-search to ~/.local/bin..."'
      - mkdir -p ~/.local/bin
      - cp brew-search ~/.local/bin/
      - echo "‚úÖ Installation complete!"
      - 'echo "üí° Make sure ~/.local/bin is in your PATH"'

  run:
    desc: Build and run brew-search
    deps: [build]
    cmds:
      - ./brew-search

  demo:
    desc: Run the interactive demo
    deps: [build]
    cmds:
      - 'echo "üç∫ go-brew-search Demo"'
      - echo "====================="
      - echo ""
      - 'echo "üìù This demo will show you how to use go-brew-search"'
      - echo ""
      - echo "Features demonstrated:"
      - echo "  - Fast fuzzy search through all Homebrew packages"
      - echo "  - Multi-select capability (use TAB)"
      - echo "  - Shows which packages are already in your Brewfile"
      - echo "  - Automatically updates ~/Brewfile"
      - echo "  - Runs brew bundle to install selected packages"
      - echo ""
      - echo "Press ENTER to start the interactive search..."
      - read -n 1 -s -r -p "Press any key to continue..."
      - ./brew-search
      - echo ""
      - 'echo "‚ú® Demo complete!"'

  test:
    desc: Run tests
    cmds:
      - 'echo "üß™ Running tests..."'
      - go test -v ./...

  test-coverage:
    desc: Run tests with coverage
    cmds:
      - 'echo "üß™ Running tests with coverage..."'
      - go test -v -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out -o coverage.html
      - 'echo "üìä Coverage report generated: coverage.html"'

  clean:
    desc: Clean build artifacts and cache
    cmds:
      - 'echo "üßπ Cleaning build artifacts..."'
      - rm -f brew-search
      - rm -f coverage.out coverage.html
      - 'echo "‚úÖ Clean complete!"'

  clean-cache:
    desc: Clear the local package cache
    cmds:
      - 'echo "üóëÔ∏è  Clearing package cache..."'
      - rm -rf ~/.cache/go-brew-search
      - 'echo "‚úÖ Cache cleared!"'

  deps:
    desc: Download and verify dependencies
    cmds:
      - 'echo "üì¶ Downloading dependencies..."'
      - go mod download
      - go mod verify
      - 'echo "‚úÖ Dependencies ready!"'

  tidy:
    desc: Tidy and verify go.mod
    cmds:
      - 'echo "üßπ Tidying go.mod..."'
      - go mod tidy
      - 'echo "‚úÖ go.mod is tidy!"'

  fmt:
    desc: Format Go code
    cmds:
      - 'echo "üé® Formatting code..."'
      - go fmt ./...
      - 'echo "‚úÖ Code formatted!"'

  lint:
    desc: Run linters
    cmds:
      - 'echo "üîç Running linters..."'
      - 'test -z $(gofmt -l .) || (echo "‚ùå Code needs formatting" && exit 1)'
      - go vet ./...
      - 'echo "‚úÖ Linting passed!"'

  dev:
    desc: Run in development mode with auto-rebuild
    cmds:
      - 'echo "üëÄ Watching for changes..."'
      - 'echo "‚ö†Ô∏è  Note: Requires fswatch (brew install fswatch) or inotify-tools"'
      - echo "Press Ctrl+C to stop watching"
      - 'command -v fswatch >/dev/null 2>&1 && fswatch -r cmd/ internal/ | xargs -n1 -I{} task build || echo "‚ùå fswatch not found. Install with: brew install fswatch"'

  release:
    desc: Build release binaries for multiple platforms
    cmds:
      - 'echo "üì¶ Building release binaries..."'
      - mkdir -p dist
      - GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/brew-search-darwin-amd64 cmd/main.go
      - GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/brew-search-darwin-arm64 cmd/main.go
      - GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/brew-search-linux-amd64 cmd/main.go
      - GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/brew-search-linux-arm64 cmd/main.go
      - 'echo "‚úÖ Release binaries built in dist/"'
      - ls -la dist/

  check:
    desc: Run all checks (fmt, lint, test)
    cmds:
      - task: fmt
      - task: lint
      - task: test